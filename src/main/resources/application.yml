server:
  port: 8080
  tomcat:
    threads:
      max: 20
      min-spare: 15
#    min-spare-threads: 300
    accept-count: -1 # 대기 큐의 최대 커넥션 수
    max-connections: 8192  # 최대 커넥션 수
    max-keep-alive-requests: -1
    keep-alive-timeout: 12000
    connection-timeout: 5s
spring:
  data:
    redis:
      host: localhost
      port: 6379
  application:
    name: hh5-concert-reservation
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mydatabase
    username: myuser
    password: mypassword
    hikari:
      maximumPoolSize: 10  # 최대 커넥션 수
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
#        format_sql: true
#        show_sql: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
